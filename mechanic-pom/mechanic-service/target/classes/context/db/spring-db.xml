<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 数据源配置 -->
	<bean id="mechanic-ds" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!--<property name="driverClassName">
			<value>${mysql.driverClassName}</value>
		</property>-->
		<property name="url">
			<value>${database.url}</value>
		</property>
		<property name="username">
			<value>${database.username}</value>
		</property>
		<property name="password">
			<value>${database.password}</value>
		</property>
		<!--<property name="maxActive">
			<value>50</value>
		</property>
		<property name="initialSize">
			<value>5</value>
		</property>
		<property name="maxWait">
			<value>60000</value>
		</property>
		<property name="minIdle">
			<value>5</value>
		</property>
		<property name="poolPreparedStatements">
			<value>true</value>
		</property>
		<property name="maxOpenPreparedStatements">
			<value>10</value>
		</property>
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;
		<property name="logAbandoned" value="true" />
		<property name="removeAbandonedTimeout">
			<value>60</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property> &lt;!&ndash; 打开检查,用异步线程evict进行检查 &ndash;&gt;
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>
		<property name="validationQuery">
			<value>select 1 </value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>300000</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>120000</value>
		</property>
		<property name="defaultAutoCommit">
			<value>false</value>
		</property>
		&lt;!&ndash; <property name="proxyFilters"> <list> <ref bean="stat-filter" /> </list>
			</property> &ndash;&gt;-->
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0"/>
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20"/>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000"/>

		<property name="validationQuery" value="SELECT 1"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="testWhileIdle" value="true"/>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000"/>

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true"/>
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800"/>
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true"/>

		<!-- 监控数据库 -->
		<property name="filters" value="mergeStat"/>
	</bean>
	
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mechanic-ds" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:ormapping/mybatis/*.xml</value>
			</list>
		</property>
	</bean>-->
	<!-- Spring整合Mybatis，更多查看文档：http://mp.baomidou.com -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="mechanic-ds"/>
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:ormapping/mybatis/*.xml"/>
        <!-- 配置实体扫描路径，多个package可以用分号; 逗号, 分隔， 支持通配符*-->
        <property name="typeAliasesPackage" value="com.cubicpark.mechanic.domain.dto.*"/>
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="typeEnumsPackage" value="com.baomidou.springmvc.model.enums"/>-->
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor"
					  class="com.baomidou.mybatisplus.plugins.PaginationInterceptor"/>
			</array>
		</property>
		<!-- 全局配置注入 -->
		<property name="globalConfig" ref="globalConfig" />
	</bean>

    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!--
            AUTO->`0`("数据库ID自增")
             INPUT->`1`(用户输入ID")
            ID_WORKER->`2`("全局唯一ID")
            UUID->`3`("全局唯一ID")
        -->
        <property name="idType" value="0" />
        <!--
            MYSQL->`mysql`
            ORACLE->`oracle`
            DB2->`db2`
            H2->`h2`
            HSQL->`hsql`
            SQLITE->`sqlite`
            POSTGRE->`postgresql`
            SQLSERVER2005->`sqlserver2005`
            SQLSERVER->`sqlserver`
        -->
        <!-- Oracle需要添加该项 -->
        <!-- <property name="dbType" value="oracle" /> -->
        <!-- 全局表为下划线命名设置 true -->
        <!-- <property name="dbColumnUnderline" value="true" /> -->
       <!-- <property name="metaObjectHandler">
            <bean class="com.baomidou.springmvc.common.MyMetaObjectHandler" />
        </property>-->
    </bean>


	<!-- MyBatis 动态扫描  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cubicpark.mechanic.dao"/>
	</bean>

	<!-- 配置事务管理 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mechanic-ds"/>
    </bean>
	<!-- 配置切面 -->
    <aop:config>
		<aop:advisor pointcut="execution(* com.cubicpark.mechanic.domain..*Service.*(..))"
			advice-ref="txAdvice" order="1" />
	</aop:config>

	<!-- 事务管理 属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!--<tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="query*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="load*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>-->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="append*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="edit*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="choice*" propagation="REQUIRED"/>
			<tx:method name="repair" propagation="REQUIRED"/>
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="handle*" propagation="REQUIRED"/>
			<tx:method name="change*" propagation="REQUIRED"/>

			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="load*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="search*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="datagrid*" propagation="REQUIRED" read-only="true"/>

			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
</beans>